# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: install dependencies
        run: go get github.com/gruntwork-io/terratest/modules/aws
     
      - name: install dependencies1
        run: go get github.com/stretchr/testify/assert
        
      - name: install dependencies
        run: go get github.com/gruntwork-io/terratest/modules/terraform
     
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with: 
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./flugel.it/terraform
        
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./flugel.it/terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./flugel.it/terraform
        
      - name: Test
        run: go test -v ./...
      
